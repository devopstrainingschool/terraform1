# Disable all components except PostgreSQL
roles ['postgres_role']

# Only the master database should become master 
{% if hostvars[inventory_hostname].role == "slave"  %}
repmgr['master_on_initialization'] = false
{% endif %}

#Database properties
postgresql['listen_address'] = '0.0.0.0'
postgresql['hot_standby'] = 'on'
postgresql['wal_level'] = 'replica'
postgresql['shared_preload_libraries'] = 'repmgr_funcs'

# Replace pgbouncer_user_password with a generated md5 value :packtpub
# gitlab-ctl pg-password-md5 pgbouncer packtpub
postgresql['pgbouncer_user_password'] = '5da810d253b27c0a30ce8a19c4361659'

# Replace POSTGRESQL_PASSWORD_HASH with a generated md5 value :packtpub
# gitlab-ctl pg-password-md5 gitlab packtpub
postgresql['sql_user_password'] = '319e2283a175820cc15a0c7ed742f336'

# Disable automatic database migrations
gitlab_rails['auto_migrate'] = false

#Set the number of wal senders to how many postgresql servers +1
postgresql['max_wal_senders'] = 4

postgresql['max_replication_slots'] = 4

# Create a whitelist
postgresql['trust_auth_cidr_addresses'] = %w({{ hostvars[groups['db'][0]]['subnet'] }} {{ hostvars[groups['db'][1]]['subnet'] }} {{ hostvars[groups['db'][2]]['subnet'] }})
postgresql['md5_auth_cidr_addresses'] =  %w({{ hostvars[groups['frontend'][0]]['inventory_hostname'] }} {{ hostvars[groups['frontend'][1]]['inventory_hostname'] }} {{ hostvars[groups['backend'][0]]['inventory_hostname'] }}  {{ hostvars[groups['backend'][0]]['inventory_hostname'] }} )
repmgr['trust_auth_cidr_addresses'] = %w({{ hostvars[groups['db'][0]]['subnet'] }} {{ hostvars[groups['db'][1]]['subnet'] }} {{ hostvars[groups['db'][2]]['subnet'] }})

# Configure the consul agent
consul['services'] = %w(postgresql)

# Consul nodes
consul['configuration'] = {
   retry_join: %w({{ hostvars[groups['consul'][0]]['inventory_hostname'] }}  {{ hostvars[groups['consul'][1]]['inventory_hostname'] }} {{ hostvars[groups['consul'][2]]['inventory_hostname'] }})
}

